name: Publish to Cloud Storage
on:
  pull_request:
    types: ['opened', 'reopened', 'synchronize']
jobs:
  main:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: ubuntu-latest
    env:
      GCLOUD_PROJECT_ID: '（プロジェクトID）'
      GCLOUD_DNS_ZONE: '（DNSゾーン名）'
      GCLOUD_DNS_DOMAIN: '（ドメイン）'
      GCLOUD_WORKLOAD_IDENTITY: '（Workload Identity 連携）'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: './src'
        token: ${{ secrets.GH_TOKEN }}

    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v5

    - name: Set DNS and bucket name
      run: echo 'TARGET_DOMAIN=${{ steps.branch-name.outputs.current_branch }}.storage.${{ env.GCLOUD_DNS_DOMAIN }}' >> $GITHUB_ENV

    - id: auth
      name: Set up GoogleCloud Authorization
      uses: google-github-actions/auth@v0
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ env.GCLOUD_WORKLOAD_IDENTITY }}
        service_account: 'github-actions@${{ env.GCLOUD_PROJECT_ID }}.iam.gserviceaccount.com'
        access_token_lifetime: '300s'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0

    - name: Set up CloudStorage
      if: ${{ github.event.action != 'synchronize' }}
      run: |
        curl --request POST \
          'https://storage.googleapis.com/storage/v1/b?project=${{ env.GCLOUD_PROJECT_ID }}' \
          --header 'Authorization: Bearer ${{ steps.auth.outputs.access_token }}' \
          --header 'Content-Type: application/json' \
          --data '{"name":"${{ env.TARGET_DOMAIN }}","location":"asia-northeast1","website":{"mainPageSuffix":"index.html"}}'
        curl --request PUT \
          'https://storage.googleapis.com/storage/v1/b/${{ env.TARGET_DOMAIN }}/iam' \
          --header 'Authorization: Bearer ${{ steps.auth.outputs.access_token }}' \
          --header 'Content-Type: application/json' \
          --data '{"bindings":[{"members":["allUsers"],"role":"roles/storage.objectViewer"},{"members":["projectOwner:${{ env.GCLOUD_PROJECT_ID }}","projectEditor:${{ env.GCLOUD_PROJECT_ID }}"],"role":"roles/storage.admin"},{"members":["projectViewer:${{ env.GCLOUD_PROJECT_ID }}"],"role":"roles/storage.objectViewer"}]}'

    - name: Add DNS record
      if: ${{ github.event.action != 'synchronize' }}
      run: |
        gcloud dns record-sets transaction start --zone=${{ env.GCLOUD_DNS_ZONE }} 
        gcloud dns record-sets transaction add c.storage.googleapis.com. --name='${{ env.TARGET_DOMAIN }}.' --ttl='60' --type='CNAME' --zone=${{ env.GCLOUD_DNS_ZONE }} 
        gcloud dns record-sets transaction execute --zone=${{ env.GCLOUD_DNS_ZONE }}

    - name: Purge exist files
      if: ${{ github.event.action == 'synchronize' }}
      run: |
        yes | gcloud components install alpha
        gcloud alpha storage rm gs://${{ env.TARGET_DOMAIN }}/**

    - name: Upload files
      uses: google-github-actions/upload-cloud-storage@v0.5.0
      with:
        path: './src'
        destination: ${{ env.TARGET_DOMAIN }}
        parent: false
        headers: |-
          cache-control: no-cache